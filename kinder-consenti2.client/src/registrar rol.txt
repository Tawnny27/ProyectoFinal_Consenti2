import React, { useState } from 'react';
import axios from 'axios';

const RegistrarRol = () => {
  const [rol, setRol] = useState({
    idRol: 0,
    nombreRol: '',
    usuariosInternos: [''],
    padres: [
      {
        idPadre: 0,
        rolId: 0,
        nombrePadre: '',
        apellidosPadre: '',
        cedulaPadre: '',
        telefonoPadre: '',
        correoPadre: '',
        rol: '',
        hijos: [
          {
            idAlumno: 0,
            padreId: 0,
            nombreAlumno: '',
            apellidosAlumno: '',
            fechaNacimiento: '',
            cedulaAlumno: '',
            generoAlumno: '',
            direccionAlumno: '',
            informacionAdicional: '',
            fotoAlumno: '',
            nombreCompAutorizado: '',
            cedulaAutorizado: '',
            telefonoAutorizado: '',
            relacionAutorizado: '',
            nombreCompContacto: '',
            cedulaContacto: '',
            telefonoContacto: '',
            relacionContacto: '',
          },
        ],
      },
    ],
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setRol({ ...rol, [name]: value });
  };

  const handleUsuarioInternoChange = (index, e) => {
    const { value } = e.target;
    const updatedUsuarios = rol.usuariosInternos.map((usuario, i) =>
      i === index ? value : usuario
    );
    setRol({ ...rol, usuariosInternos: updatedUsuarios });
  };

  const agregarUsuarioInterno = () => {
    setRol({
      ...rol,
      usuariosInternos: [...rol.usuariosInternos, ''],
    });
  };

  const handlePadreChange = (index, e) => {
    const { name, value } = e.target;
    const updatedPadres = rol.padres.map((padre, i) =>
      i === index ? { ...padre, [name]: value } : padre
    );
    setRol({ ...rol, padres: updatedPadres });
  };

  const agregarPadre = () => {
    setRol({
      ...rol,
      padres: [
        ...rol.padres,
        {
          idPadre: 0,
          rolId: 0,
          nombrePadre: '',
          apellidosPadre: '',
          cedulaPadre: '',
          telefonoPadre: '',
          correoPadre: '',
          rol: '',
          hijos: [
            {
              idAlumno: 0,
              padreId: 0,
              nombreAlumno: '',
              apellidosAlumno: '',
              fechaNacimiento: '',
              cedulaAlumno: '',
              generoAlumno: '',
              direccionAlumno: '',
              informacionAdicional: '',
              fotoAlumno: '',
              nombreCompAutorizado: '',
              cedulaAutorizado: '',
              telefonoAutorizado: '',
              relacionAutorizado: '',
              nombreCompContacto: '',
              cedulaContacto: '',
              telefonoContacto: '',
              relacionContacto: '',
            },
          ],
        },
      ],
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    axios
      .post('URL_DEL_BACKEND', rol)
      .then((response) => {
        console.log('Rol registrado:', response.data);
      })
      .catch((error) => {
        console.error('Error registrando rol:', error);
      });
  };

  return (
    <form onSubmit={handleSubmit}>
      <h2>Registrar Rol</h2>
      <input
        type="text"
        name="nombreRol"
        value={rol.nombreRol}
        onChange={handleChange}
        placeholder="Nombre del rol"
        required
      />
      
      <h3>Usuarios Internos</h3>
      {rol.usuariosInternos.map((usuario, index) => (
        <div key={index}>
          <input
            type="text"
            value={usuario}
            onChange={(e) => handleUsuarioInternoChange(index, e)}
            placeholder={`Usuario interno ${index + 1}`}
            required
          />
        </div>
      ))}
      <button type="button" onClick={agregarUsuarioInterno}>
        Agregar Usuario Interno
      </button>

      <h3>Padres</h3>
      {rol.padres.map((padre, index) => (
        <div key={index}>
          <input
            type="text"
            name="nombrePadre"
            value={padre.nombrePadre}
            onChange={(e) => handlePadreChange(index, e)}
            placeholder="Nombre del padre"
            required
          />
          <input
            type="text"
            name="apellidosPadre"
            value={padre.apellidosPadre}
            onChange={(e) => handlePadreChange(index, e)}
            placeholder="Apellidos del padre"
            required
          />
          <input
            type="text"
            name="cedulaPadre"
            value={padre.cedulaPadre}
            onChange={(e) => handlePadreChange(index, e)}
            placeholder="Cédula del padre"
            required
          />
          {/* Agrega más campos según el backend */}
        </div>
      ))}
      <button type="button" onClick={agregarPadre}>
        Agregar Padre
      </button>

      <button type="submit">Registrar</button>
    </form>
  );
};

export default RegistrarRol;
